# [allow (non_snake_case)] # [allow (dead_code)] # [allow (non_upper_case_globals)] # [allow (non_camel_case_types)] mod ffi { pub trait ToCppString { fn into_cpp (self) -> cxx :: UniquePtr < cxx :: CxxString > ; } impl ToCppString for & str { fn into_cpp (self) -> cxx :: UniquePtr < cxx :: CxxString > { make_string (self) } } impl ToCppString for String { fn into_cpp (self) -> cxx :: UniquePtr < cxx :: CxxString > { make_string (& self) } } impl ToCppString for & String { fn into_cpp (self) -> cxx :: UniquePtr < cxx :: CxxString > { make_string (self) } } impl ToCppString for cxx :: UniquePtr < cxx :: CxxString > { fn into_cpp (self) -> cxx :: UniquePtr < cxx :: CxxString > { self } } unsafe impl cxx :: ExternType for bindgen :: root :: Test { type Id = cxx :: type_id ! ("Test") ; type Kind = cxx :: kind :: Opaque ; } mod bindgen { pub (super) mod root { # [repr (C , align (4))] pub struct Test { _pinned : core :: marker :: PhantomData < core :: marker :: PhantomPinned > , _non_send_sync : core :: marker :: PhantomData < [* const u8 ; 0] > , _data : :: core :: cell :: UnsafeCell < :: core :: mem :: MaybeUninit < [u8 ; 4] > > } impl Test { pub fn to_string (self : & root :: Test) -> cxx :: UniquePtr < cxx :: CxxString > { cxxbridge :: to_string_autocxx_wrapper_0xe8c1ab2ef1ef4995 (self) } pub fn new () -> impl autocxx :: moveit :: new :: New < Output = Self > { unsafe { autocxx :: moveit :: new :: by_raw (move | this | { let this = this . get_unchecked_mut () . as_mut_ptr () ; cxxbridge :: new_autocxx_autocxx_wrapper_0xe8c1ab2ef1ef4995 (this) }) } } } unsafe impl autocxx :: moveit :: MakeCppStorage for root :: Test { unsafe fn allocate_uninitialized_cpp_storage () -> * mut root :: Test { cxxbridge :: Test_autocxx_alloc_autocxx_wrapper_0xe8c1ab2ef1ef4995 () } unsafe fn free_uninitialized_cpp_storage (arg0 : * mut root :: Test) { cxxbridge :: Test_autocxx_free_autocxx_wrapper_0xe8c1ab2ef1ef4995 (arg0) } } unsafe impl autocxx :: moveit :: new :: MoveNew for root :: Test { # [doc = "Synthesized move constructor."] unsafe fn move_new (mut other : :: core :: pin :: Pin < autocxx :: moveit :: MoveRef < '_ , root :: Test > > , this : :: core :: pin :: Pin < & mut :: core :: mem :: MaybeUninit < root :: Test > >) { cxxbridge :: new_synthetic_move_ctor_0xe8c1ab2ef1ef4995_autocxx_wrapper_0xe8c1ab2ef1ef4995 (this . get_unchecked_mut () . as_mut_ptr () , { let r : & mut _ = :: core :: pin :: Pin :: into_inner_unchecked (other . as_mut ()) ; r }) } } unsafe impl autocxx :: moveit :: new :: CopyNew for root :: Test { # [doc = "Synthesized copy constructor."] unsafe fn copy_new (other : & root :: Test , this : :: core :: pin :: Pin < & mut :: core :: mem :: MaybeUninit < root :: Test > >) { cxxbridge :: new_synthetic_const_copy_ctor_0xe8c1ab2ef1ef4995_autocxx_wrapper_0xe8c1ab2ef1ef4995 (this . get_unchecked_mut () . as_mut_ptr () , other) } } impl Drop for root :: Test { # [doc = "Synthesized destructor."] fn drop (self : & mut root :: Test) { unsafe { cxxbridge :: Test_synthetic_destructor_0xe8c1ab2ef1ef4995_autocxx_wrapper_0xe8c1ab2ef1ef4995 (self) } } } # [allow (unused_imports)] use self :: super :: super :: { cxxbridge , ToCppString } ; # [allow (unused_imports)] use self :: super :: root ; } } # [cxx :: bridge] mod cxxbridge { impl UniquePtr < Test > { } impl SharedPtr < Test > { } impl WeakPtr < Test > { } impl CxxVector < Test > { } unsafe extern "C++" { fn autocxx_make_string_0xe8c1ab2ef1ef4995 (str_ : & str) -> UniquePtr < CxxString > ; pub unsafe fn Test_autocxx_alloc_autocxx_wrapper_0xe8c1ab2ef1ef4995 () -> * mut Test ; pub unsafe fn Test_autocxx_free_autocxx_wrapper_0xe8c1ab2ef1ef4995 (arg0 : * mut Test) ; type Test = super :: bindgen :: root :: Test ; pub fn inc (self : Pin < & mut Test >) ; pub fn to_string_autocxx_wrapper_0xe8c1ab2ef1ef4995 (autocxx_gen_this : & Test) -> UniquePtr < CxxString > ; pub unsafe fn new_autocxx_autocxx_wrapper_0xe8c1ab2ef1ef4995 (autocxx_gen_this : * mut Test) ; pub fn x3 (a : u32) -> u32 ; # [doc = "Synthesized move constructor."] pub unsafe fn new_synthetic_move_ctor_0xe8c1ab2ef1ef4995_autocxx_wrapper_0xe8c1ab2ef1ef4995 (autocxx_gen_this : * mut Test , other : * mut Test) ; # [doc = "Synthesized copy constructor."] pub unsafe fn new_synthetic_const_copy_ctor_0xe8c1ab2ef1ef4995_autocxx_wrapper_0xe8c1ab2ef1ef4995 (autocxx_gen_this : * mut Test , other : & Test) ; # [doc = "Synthesized destructor."] pub unsafe fn Test_synthetic_destructor_0xe8c1ab2ef1ef4995_autocxx_wrapper_0xe8c1ab2ef1ef4995 (autocxx_gen_this : * mut Test) ; include ! ("input.h") ; include ! ("autocxxgen_ffi.h") ; } extern "Rust" { } } # [allow (unused_imports)] use bindgen :: root ; pub use cxxbridge :: autocxx_make_string_0xe8c1ab2ef1ef4995 as make_string ; # [allow (unused_imports)] pub use bindgen :: root :: Test ; pub use cxxbridge :: x3 ; }